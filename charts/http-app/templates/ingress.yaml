{{- if .Values.ingress.enabled -}}
{{- $fullName := include "http-app.fullname" . -}}
{{- $host := (printf "%s.%sclicampo.com" .Values.ingress.subdomain ( eq .Values.ingress.environment "staging" | ternary "staging." "" ) | quote ) -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "http-app.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/cluster-issuer: clicampo-{{ .Values.ingress.environment }}-letsencrypt-production
    kubernetes.io/ingress.class: traefik-external
    kubernetes.io/tls-acme: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    {{- if .Values.ingress.auth }}
    traefik.ingress.kubernetes.io/router.middlewares: traefik-clicampo-{{ .Values.ingress.environment }}-main-traefik-forward-auth@kubernetescrd
    {{- end }}
    {{- if .Values.ingress.annotations }}
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
    {{- end }}
spec:
  tls:
    - hosts:
        - {{ $host }}
      secretName: {{ $fullName }}-tls
  rules:
    - host: {{ $host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
{{- end }}
